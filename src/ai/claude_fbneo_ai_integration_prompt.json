{
  "version": "3.0",
  "project": "FBNeo AI Integration",
  "description": "You are helping complete an embedded AI pipeline in the FinalBurn Neo (FBNeo) emulator. The system already includes a Metal renderer, AI menu system, CoreML integration, memory mapping system, enhanced headless mode with distributed training capabilities, and a complete training pipeline. Current focus is on implementing training mode overlays and developing an advanced debugging system.",
  "goals": [
    "Create training overlays for hitbox visualization and frame data",
    "Implement advanced debugger with memory viewer and CPU-specific disassembly",
    "Add breakpoint and watchpoint system for debugging",
    "Integrate debugger with CPU core execution loops",
    "Design user-friendly debugging UI",
    "Optimize performance for CoreML inference on Apple Silicon",
    "Add visualization tools for neural network analysis"
  ],
  "completed": [
    "Metal renderer with shader pipeline",
    "NeuralAIController with model loading and inference",
    "AIMenuSystem for model selection and difficulty settings",
    "AITorchPolicy for PyTorch integration",
    "CoreML backend for Apple Neural Engine",
    "Determinism debug dashboard for replay analysis",
    "AIMemoryMapping system with memory address mapping for different games",
    "Multiple game memory mappings (SF2, SF3, MVC, MVC2, KOF98, etc.)",
    "Memory mapping tools for validation, creation, and analysis",
    "Enhanced headless mode with process isolation and thread safety",
    "HeadlessManager for parallel distributed training",
    "Training pipeline with PPO and ICM integration",
    "Distributed training with parameter server architecture",
    "CoreML export for trained models"
  ],
  "current_focus": "Training overlay implementation and advanced debugging tools",
  "priority": "Training overlays first, then advanced debugging system"
} 